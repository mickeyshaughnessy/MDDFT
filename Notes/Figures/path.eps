%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.5 (Build 13F1077) Quartz PS Context)
%%Title: (path copy)
%%Creator: (Preview: cgpdftops CUPS filter)
%%CreationDate: (Wednesday, April 15 2015 10:38:16 PDT)
%%For: (Jones, Reese)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(path copy)def
/Creator(Preview: cgpdftops CUPS filter)def
/CreationDate(Wednesday, April 15 2015 10:38:16 PDT)def
/For(Jones, Reese)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *Duplex None
<</Duplex false>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Option1 True
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize Letter
<</PageSize[612 792]/ImagingBBox null>>setpagedevice
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 612 792
%%BeginPageSetup
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: SQYREF+font000000001aded988
%!FontType1-1.0: SQYREF+font000000001aded988 1.0000.0.0000
14 dict begin/FontName /SQYREF+font000000001aded988 def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid1 put
dup 34 /gid2 put
dup 35 /gid3 put
dup 36 /gid4 put
dup 37 /gid5 put
dup 38 /gid6 put
dup 39 /gid7 put
dup 40 /gid8 put
dup 41 /gid9 put
dup 42 /gid10 put
dup 43 /gid11 put
dup 44 /gid12 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -416 1 index div -877 2 index div 3482 3 index div 2604 5 -1 roll div]cvx def
/sfnts [<


2B2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8002C2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8002D2C2020456944B001602020457D691844B001602DB8002E2CB8002D2A2DB8002F2C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800302C4B535845441B2121592DB800312C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800322C2020456944B001602DB800332CB800322A212DB800342C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800352C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800362C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800372C2020456944B001602020457D691844B001602DB800382CB800372A2DB800392C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8003A2C4B535845441B2121592D0002002100000597054B000300070043B40201490506B80156401C0004074903000A0504490303021A090607490100190809EB214652182B2B4EF43C4DFD3C4E10F63C4D10FD3C003F3CFD3C10F43CFD3C31303311211127112111210576B8FBFA054BFAB5B803DBFC25000000020033FFDE051005630023002400AC401AD91CE617E31803591869180228081617051B067E40081B210707B801414022067E4002A12616070F1617120C2E242303122E1B0924241F07619F17BF17CF170317B80206B3260F541FB80205B126252FCCF4ED10FE5DE412392F003FED3F3CED11393901111239001A3DE81A18F4ED01101A3DED181AF4ED0010C931304379401C1C220D111D252126111C0F37000D220F3700101E1237000E200C37012B2B012B2B2B2B8181005D015D001633323637331323262726232200111000333237363717060706232027261110373621220365EA0E1D340A2B132F29427ED5D7FEEF011FDC9F864D5C264465ACC9FEB6C2B3BDC7013F070563422022FE3489549EFEACFED6FEEEFEB94C2B572656416ED3C30124012BCBD5000100E300000325055E0016006F4019761486140226143614020CFD6208E02203F96207E02314E0
0DB8016EB2136214B8017E40110D0C03020408150508070C1817171A0203B80130B50C0C0D191718BC0178002101A5015D00182B2B4EF43C4D10FD3C4E456544E6003F3C3F1217394DF5EDFC01F52B2B313000715D001615111416171521353E0135113426232206073525330262015270FDCC794A18281A5324016F0C05590509FB4C4D2A041C1E06365A039E30321D101CBB000001003D000003CB0564001B00B8404C2512016C006E016913036402960FF60FF61404050F0614150F2514042B08142100000118190A0B010B0A0303001A0318191119180B0A01050614066B0E051514A41A4000211B0C038811BC19BB0208001D00000207B11D1C2FCCE410F6F4ED003F1A3DCC181A3CFD3C3FED111217390111123912391112173910C910C90705101AC531304379401C04100825070D0A3500090A0C0B050F033501090C0635010410063501002B2B012B103C103C2B2B8101715D005D713708013534262322070607273E0133321615140201213236371703213D016E0106A06F89552F2B2B32EF89A9D1E2FE8601CB604E311A6FFCE117017C0164A9949B64377209E6B3D59AA4FED0FE7B2E590CFEE900000000020012FFED03B10560000E001E00924022AC01EB0CE51403C500D600E5000331003505390D034C0806A01E050EA0160D028812B80208B3200A881AB80207B1201F2FCCF4ED10F6ED003FED3FED313043794038001D0C261825142608251C26102504260D170A35000015023501071D0A3500050F0235010B190E350001130E3500091B06350103110635012B2B2B2B012B2B2B2B2B2B2B2B2B2B2B8101715D005D24121134270223220306151417163312171615140702212227261110373633027D6E213EAAAA3F212240B0E37F653E75FEE0C57F885B7BFF2501420131F391010EFEEA94F2E388FE053BF1C3FDC7B0FEB5B3BF01480102BAFD00000100DCFFE801BF00CB000B00264013052A0B0B0D17171A082A02190C0DC321788E182B2B4EF44DFD4E456544E6003F4DED3130042635343633321615140623011E42432F2F42413018432F2F42422F2F43000000020017000003C7055E0002000D0085401F780301050D06040902030D00010173120D0D03010D000C03040A000103060DBB01740007000C0197B50A03050A0C0AB8011E400900A4093004E0040204B80136B720064006A0060306BB020A000F000C0209B10F0E2FCCE410F65DF45D3CFDE4003F3F10F43CF53C1139390111123911123939872E2B047D10C5001112390F3130015D09012113331133152311231121350255FE1501EB425FD1D19FFDC00490FD4A0384FC7C85FEAB015585000000010059FFF10376056A002F0095403C49195B070207241624290739074B076A076A0879077B08A919C6240B172118181700032C0122100D181702130C02F529




00>] def
/CharStrings 13 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-416 -877 3482 2604}def
/UniqueID 4163772 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B71CCBEC8DADBFCB2CF6F614DCF0404E4678133CDA654CD39ADC4A8DD9DC9E199CA389B3091F9C44BAA6FACA606AC3B0D9DDEC506C0BB2AD9CD0C4C38F8E771B8E2E5A91FF16885F1D49F1073024B50F722AA1694D4941AC486A09540B04D4438FCFE4F7FBF442EC7D33DADEED18BBF3667C8AEE521CC1783BAD62B56105D48798E27596D58B228C993CB5360497C9347C6CF73CC17FAC77B139DA1EA1F0AE1E6281C18E559834771DC371AE1041517302A4B218786E53019006C360CB95BAC971DA0DDA631F1130474340D80C760F39AD9407383C3C033A8E6ADE2EE4CDFFDDDFEE7370E6FEBC337AE4918CFD55D037FB71F8E46254C90262B25F03FB14791AD6B962974C1B91334C5E659D2C6AB8392069250BC81644A728739ABC3F9816BBC38E1B1756736A81A24800BC65533CA24E3B7F41F78325A28BBC719448DB9A37AB9041D384548B410890607E96274B44D025C7DA5CB784EA0031E9227C8823CEA91037D058183DCD8CECF750FD76D2B9604E976AEC402018C6E7721750DA8E6363830BF58FF84D2956D9E38D15342123F9AD295B180CB5DEC846071739E1634F8DD0E4A427FAC55798E99FDE4AE8350E35C4E2A61F2D356D2DFF2A7FAB0CDFB3D4286FB9CA351C730CCAED9D9048A1B04E7BF7D2FFE81C5BC08BB97027150C3D7BDD28AFAA07DFB100D7E1A1611E868BB4A58006D0F95CED0E2E64B1CD162FC3EF115D0685CDB384DE2277282E3AB29B2C9BDF8D723FF8E254A3015F8A9B87E5
5D99391498DE8B94D404C782F85BFB145B1DB3FC7A779698038FBCD94FAF533D8AF9C6FA14A70EC000A9A0A40F024205AF70AA8698737530D9B2DBB2DF35362DD99B9F4B685ABCBE6084574120E911AD7A8BAA2D1F82F7DDA28B5CA679681DC143221051B7C34A5BB0D9D6F27B53918D42A73F9A127AD1C68B245710F4D77BAD7091B18814B8ED95F897533DEFE4D01BDD4CDE36CE9373F09B35AE6164BFC0C27C75A9DD6C5F02E0F163702745E249E9CC66581880CF27C3179114FA2190EABE4BDBBBEDC34038B3AEAB678D32050CF49727CC13EB5274FE4AE2E3C50C5C992E57BD592F75D84C32F4991865658DEA1C14F9CEFF313EEE8E8E17C90EE063BCA5B1C546A2E64815E8931C04894899CC504106950F387E918AB8739E52F1C3758225929CC3A39D656E7B67D4F07BC85ADC9A5326D3D127442C9AFAF56AE27198F0A412F8AF52BCB11AA459D465B729B577FC41CB5989D7CB542A68690153F522E1F204DEE407B7B8A8211CA929A3F2CBA86CD49CD289FF79F7777F55CBEACDA11B6544DACABECB3CE2F0DAD8173C2B3AF74C667E62AFD50B1725267FC9ECF23BE79838803613DBD7155645D2FC4A963E7B4CE24AE7E5707B919708429634C39DE8A53BCD45A4D74E52B2EA8364096A81FB20C8B0F9DCC34C3FE3B328419D70467004E7A07F69C16FF22DD7301E2C1EA9B8E0525F643E287B9B9F5A1C0762DB98004AE4A0324A3D0CF9A608326FD37EC11A8BA6E242A3137563BBD622D2A5A7E9DECE6D044ED9C2B38F21146D725E9822D16522646AA3D812D0F9773BB2809ACB8BEC047013DB2A3E21ACA5A9097B3F0D2613E21608FA727946DD5D8506A03124F8E8CDC812450AF8F41B605AC58C0D13E7B335ABA32E566A68C7C118A63CF66642FCD1EEB243C773EE80A4D8AB03C9FD541C12FE0FE82FC26233F57E710320F7EE8ECB89CE40AC6FD9262424D484C935F74E8302AC2C0F3A14D5A4963397466D6B1965982C9D1BC2C34E1B39B0ACFCE4BB15109BC0CC4FF7BCE64C04F57EFF35B5AE36687DD52D7AA0EB8186A5351CEFD71E1EBA87F5DC6917B6D4259251B68A7BD0407F2322498CDB3C8EA15B56815F56AE0BCA8560C8F3C0CCEBCED526BE9D6074BFC0EDDE0941BFCFEEA7556BB945CFEEA75B19280B0E0F7E2E2252A312A61457609C1828E4F572E06F2085C03DAD9E3BCDD42BBA7C1819F49C1AA6D274B328C1DE4EC19519B15BC1BC13A9F93E9911A929A882944E06B8C7EB61B8C72D07CE72377F3801F7B9B84C4EF07F82AF8086F9A88DAEDEB15D2C2978D9141708C9D1D8E05F49D0635E5E2891DC83E654E815A709D4959722CFC7B5CCB102AB0E291C5EC043F834108056C413FFDB52E5530145D863E00F4AE9BFEAB666F795D4ADA7EB40209123372184F32481F4120D35F818B8CF73E059B282D8422A028AFD3B3E
671758D6F043B637362836DAF538B77A2459EF28D3B7D4B6B16A76B7E1DA80C260F2F74A97CA79CA62A4DDE71414428FA94702DDA113D6D7E2D27A878EF83EA3216FB5041A19EA1F6AAB0099E820FA81CB7764C23D49EF94F5401E627F8204EE50AF2310462F288088EE114CFB9CA713D55A97D4FBE50953A5C94F98A9B454371CA988BEF8097602BF9CE1DF141F01C051AEF6C6D29189770273246D60E5C73E9DF71244F4D3AB7CB3C10400CA213CA329E447A428E8809D6DAA0012169EDE2DEFCA0C77BDFFE64BE4A201475581182A1126CAE48AD0FD53796479DD273BEB37E0AF562B4C4261C168A3DF64F77AD3A8DAE87FA63CB3EB67836668B70883CA7C2B7F74FF7208DB47AB28F2F25AEF837C24B075658C1F3CEAF2405C9974EDC15EBAFC80421D191C74639D43125A996635BB4E5284CF3CF0CB0C8CC37904A8C00EF879A8BF0F9D66FE86FFB5F4A8791A6CB9987AE1C8816CCFD257D2FED8BDBF2C558CA0FF0BD7B76D7A5B7B72C898D63D1B606F021C191AF8BC737F8BB94E12EFF67920F9693D740412CD78C51FCA5D97EC14F0AB10F02C6EF37F7BDA78B03CD79CABF76CCFB440667F8FE73F04BE3F9CFBCB3C52B946D581D663DBBC36132F6B707AEA5F40AE7DECED0663336AD65EC351FC662C18A328EF4D698C8F170ACED7D647D6C843ABF48A6275B01C5F60C65E8674B96DFAFF0335790D9110BD9D5296C94CE8A85EBCD507FA125C6AB40D05625BE81F2E00C82A1CD7434AD36517D56C5DB48543D8C7CD1834E6761A32366E64E4B3625F087EAA295AB482D72400E14981C077EDA28D76E1FA8FC12860B66CF681A2E2F352169D816DEB188A9DEBEAE08B206F35C7D45A4211345836AA85B17B08BEC5C60835CB2687AFF7DCC7E17963E8DD764068A9F1E747E9C454D92042AA68BF34DC467572C2FF76DD9B203B9BAAE5EB06EB74D8B64323D6550D4CCA1B0B14D976F4F96C331C67148BA873FB18D0AAC81291D8E42ABDE5E688E09485CFBD6CB698B6588E123431EE46766B195B4553228A94A731C11BFC73C30C7BBCA9BDD0D05994
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/SQYREF+font000000001aded988 cguidfix
/F1.1/SQYREF+font000000001aded988 renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
36.081909 647.45728 m
576.15558 647.45728 l
576.15558 145.08189 l
36.081909 145.08189 l
h
W
12 121 588 550 rc
36.081909 647.45728 m
576.15558 647.45728 l
576.15558 145.08189 l
36.081909 145.08189 l
h
f
1 j
1 0 0 sc
0.66894197 0 0 0.66894197 12 121 cm
480.52701 735 m
480.52701 723.18402 471.047 713.60498 459.35501 713.60498 c
447.66 713.60498 438.18399 723.18402 438.18399 735 c
438.18399 746.81598 447.66 756.39502 459.35501 756.39502 c
471.047 756.39502 480.52701 746.81598 480.52701 735 c
q
f
Q
S
0 0 0 sc
/F1.1[ 14.00024 0 0 14.00024 0 0]sf
450.8555 731.30078 m
(!")[ 9.324160 0.000000 ] xS
1 0 0 sc
426.52701 525 m
426.52701 513.18402 417.047 503.60501 405.35501 503.60501 c
393.66 503.60501 384.18399 513.18402 384.18399 525 c
384.18399 536.81598 393.66 546.39502 405.35501 546.39502 c
417.047 546.39502 426.52701 536.81598 426.52701 525 c
q
f
Q
S
0 0 0 sc
396.8555 521.30078 m
(!#)[ 9.324160 0.000000 ] xS
441.52701 722.64801 m
418.621 706.875 379.957 675.94897 364.35501 638 c
350.418 604.10199 375.35199 563.539 392.07001 541.72998 c
S
364.3555 626.30078 m
($%#&)[ 7.000120 3.500060 7.000120 0.000000 ] xS
2 w
1 0 0 sc
447.15601 716.97302 m
434.72299 698.53101 416.19101 667.74597 408.35501 638 c
401.297 611.20697 401.164 579.55499 402.43799 556.74597 c
S
405.93799 556.84399 m
403.125 546.62903 l
398.953 556.37097 l
h
q
f
Q
S
0 0 0 sc
408.3555 626.30078 m
($%$')[ 7.000120 3.500060 7.000120 0.000000 ] xS
1 w
1 0 0 sc
504.52701 315 m
504.52701 303.18399 495.047 293.60501 483.35501 293.60501 c
471.66 293.60501 462.18399 303.18399 462.18399 315 c
462.18399 326.81601 471.66 336.39499 483.35501 336.39499 c
495.047 336.39499 504.52701 326.81601 504.52701 315 c
q
f
Q
S
0 0 0 sc
474.8555 311.30081 m
(!\()[ 9.324160 0.000000 ] xS
463.66 713.71899 m
473.785 664.84399 498.89099 536.56201 507.35501 428 c
507.90601 420.91 508.22299 419.05899 507.35501 412 c
504.039 385.05899 495.672 354.80499 489.754 335.59 c
S
500.3555 521.30078 m
($%"&)[ 7.000120 3.500060 7.000120 0.000000 ] xS
0.52941197 0.80784303 0.92156899 sc
350.52701 97 m
350.52701 85.183998 341.047 75.605003 329.35501 75.605003 c
317.66 75.605003 308.18399 85.183998 308.18399 97 c
308.18399 108.816 317.66 118.395 329.35501 118.395 c
341.047 118.395 350.52701 108.816 350.52701 97 c
q
f
Q
S
0 0 0 sc
320.8555 93.300781 m
(!')[ 9.324160 0.000000 ] xS
442 722.57397 m
419.01599 706.49597 378.875 674.99597 357.35501 638 c
288.14499 519.008 300.69101 473.68399 284.35501 337 c
274.48401 254.41 306.453 157.40199 321.711 117.07 c
S
293.3555 416.30081 m
($%"\))[ 7.000120 3.500060 7.000120 0.000000 ] xS
0.52941197 0.80784303 0.92156899 sc
161.85201 97 m
161.85201 82.644997 150.438 71.003998 136.355 71.003998 c
122.273 71.003998 110.859 82.644997 110.859 97 c
110.859 111.355 122.273 122.996 136.355 122.996 c
150.438 122.996 161.85201 111.355 161.85201 97 c
q
f
Q
S
0 0 0 sc
124.3555 93.300781 m
(!#*)[ 9.324160 7.000120 0.000000 ] xS
440.55099 723.96503 m
370.90601 685.492 128.004 539.34399 57.355 337 c
29.121 256.133 90.43 158.996 120.719 117.906 c
S
101.3555 416.30081 m
($%#$)[ 7.000120 3.500060 7.000120 0.000000 ] xS
0.52941197 0.80784303 0.92156899 sc
508.85199 97 m
508.85199 82.644997 497.43799 71.003998 483.35501 71.003998 c
469.27301 71.003998 457.85901 82.644997 457.85901 97 c
457.85901 111.355 469.27301 122.996 483.35501 122.996 c
497.43799 122.996 508.85199 111.355 508.85199 97 c
q
f
Q
S
0 0 0 sc
471.3555 93.300781 m
(!"')[ 9.324160 7.000120 0.000000 ] xS
472.828 718.19897 m
488.01199 699.83197 512.73798 668.17603 529.35498 638 c
604.25403 501.98801 607.44098 446.543 584.35498 293 c
578.06201 251.15601 574.961 240.004 556.35498 202 c
540.73798 170.10201 515.89099 137.19099 499.60199 117.156 c
S
597.35553 416.30081 m
($%##)[ 7.000120 3.500060 7.000120 0.000000 ] xS
0.52941197 0.80784303 0.92156899 sc
596.85199 97 m
596.85199 82.644997 585.43799 71.003998 571.35498 71.003998 c
557.27301 71.003998 545.85901 82.644997 545.85901 97 c
545.85901 111.355 557.27301 122.996 571.35498 122.996 c
585.43799 122.996 596.85199 111.355 596.85199 97 c
q
f
Q
S
0 0 0 sc
559.35553 93.300781 m
(!"\))[ 9.324160 7.000120 0.000000 ] xS
474.68799 719.65198 m
493.40601 701.664 525.40997 669.367 548.35498 638 c
637.31598 516.38702 675.44098 484.879 704.35498 337 c
722.53101 244.02699 631.60901 150.81599 590.586 114.199 c
S
686.35553 416.30081 m
($%#&)[ 7.000120 3.500060 7.000120 0.000000 ] xS
0.52941197 0.80784303 0.92156899 sc
92.527 97 m
92.527 85.183998 83.046997 75.605003 71.355003 75.605003 c
59.66 75.605003 50.183998 85.183998 50.183998 97 c
50.183998 108.816 59.66 118.395 71.355003 118.395 c
83.046997 118.395 92.527 108.816 92.527 97 c
q
f
Q
S
0 0 0 sc
62.855469 93.300781 m
(!&)[ 9.324160 0.000000 ] xS
439.80499 726.52002 m
371.758 699.258 145.17999 597.80902 66.355003 428 c
16.417999 320.418 50.507999 171.05499 65.387001 117.816 c
S
66.355469 416.30081 m
($%#&)[ 7.000120 3.500060 7.000120 0.000000 ] xS
0.52941197 0.80784303 0.92156899 sc
256.85199 97 m
256.85199 82.644997 245.438 71.003998 231.355 71.003998 c
217.27299 71.003998 205.85899 82.644997 205.85899 97 c
205.85899 111.355 217.27299 122.996 231.355 122.996 c
245.438 122.996 256.85199 111.355 256.85199 97 c
q
f
Q
S
0 0 0 sc
219.3555 93.300781 m
(!"#)[ 9.324160 7.000120 0.000000 ] xS
442.328 721.97699 m
418.98001 704.97699 376.504 672.164 346.35501 638 c
240.56599 518.12097 195.035 490.21899 149.355 337 c
143.76601 318.258 144.32001 311.89801 149.355 293 c
159.242 255.871 176.77699 253.125 192.355 218 c
206.562 185.961 218.246 147.09399 225.008 122.453 c
S
182.3555 416.30081 m
($%#*)[ 7.000120 3.500060 7.000120 0.000000 ] xS
0.52941197 0.80784303 0.92156899 sc
694.85199 97 m
694.85199 82.644997 683.43799 71.003998 669.35498 71.003998 c
655.27301 71.003998 643.85901 82.644997 643.85901 97 c
643.85901 111.355 655.27301 122.996 669.35498 122.996 c
683.43799 122.996 694.85199 111.355 694.85199 97 c
q
f
Q
S
0 0 0 sc
657.35553 93.300781 m
(!#")[ 9.324160 7.000120 0.000000 ] xS
477.43799 723.28101 m
543.10901 682.93799 767.08197 532.539 804.35498 337 c
822.15601 243.60899 730.22699 150.633 688.78101 114.141 c
S
780.35553 416.30081 m
($%#*)[ 7.000120 3.500060 7.000120 0.000000 ] xS
0.52941197 0.80784303 0.92156899 sc
792.85199 97 m
792.85199 82.644997 781.43799 71.003998 767.35498 71.003998 c
753.27301 71.003998 741.85901 82.644997 741.85901 97 c
741.85901 111.355 753.27301 122.996 767.35498 122.996 c
781.43799 122.996 792.85199 111.355 792.85199 97 c
q
f
Q
S
0 0 0 sc
755.35553 93.300781 m
(!"+)[ 9.324160 7.000120 0.000000 ] xS
478.547 725.40198 m
542.22998 695.59399 746.10901 589.59802 809.35498 428 c
851.97699 319.09399 800.89099 175.996 777.67603 120.945 c
S
814.35553 416.30081 m
($%'#)[ 7.000120 3.500060 7.000120 0.000000 ] xS
412.586 545.27002 m
419.61301 564.5 430.23001 594.98798 437.35501 622 c
445.69101 653.617 452.422 691.00403 456.15201 713.59003 c
S
441.3555 626.30078 m
($%#&)[ 7.000120 3.500060 7.000120 0.000000 ] xS
412.55499 504.80499 m
427.375 465.28101 461.15601 375.19101 476.05899 335.453 c
S
447.3555 416.30081 m
($%"\()[ 7.000120 3.500060 7.000120 0.000000 ] xS
2 w
1 0 0 sc
419.73401 509.18399 m
435.922 491.48001 461.504 460.19901 473.35501 428 c
483.01999 401.746 484.996 369.789 484.86301 346.742 c
S
488.35901 346.44901 m
484.668 336.51999 l
481.36301 346.586 l
h
q
f
Q
S
0 0 0 sc
478.3555 416.30081 m
($%$,)[ 7.000120 3.500060 7.000120 0.000000 ] xS
1 w
393.69901 506.85501 m
381.76199 488.31201 363.80099 457.44101 355.35501 428 c
322.86301 314.758 325.73801 171.26601 328.172 118.59 c
S
337.3555 311.30081 m
($%#*)[ 7.000120 3.500060 7.000120 0.000000 ] xS
384.48001 519.797 m
344.51599 510.60901 257.19501 484.85901 212.355 428 c
138.812 334.75 134.01199 183.19501 135.258 123.406 c
S
164.3555 311.30081 m
($%#$)[ 7.000120 3.500060 7.000120 0.000000 ] xS
401.76199 503.48001 m
398.56201 484.10199 394.121 454.17999 392.35501 428 c
386.65601 343.457 373.88699 320.90201 416.35501 202 c
427.914 169.63699 451.19501 137.10201 467.03101 117.254 c
S
390.3555 311.30081 m
($%",)[ 7.000120 3.500060 7.000120 0.000000 ] xS
422.754 512.60199 m
445.797 496.55499 485.996 465.09 507.35501 428 c
565.89099 326.34799 571.961 180.88699 571.867 123.074 c
S
555.35553 311.30081 m
($%"\))[ 7.000120 3.500060 7.000120 0.000000 ] xS
383.89801 524.14099 m
329.05099 523.22998 183.14799 512.586 113.355 428 c
36.715 335.121 57.055 174.633 67.241997 118.273 c
S
69.355469 311.30081 m
($%"\))[ 7.000120 3.500060 7.000120 0.000000 ] xS
394.43799 506.539 m
382.65201 487.47699 363.52701 455.93399 348.35501 428 c
326.82001 388.35199 319.918 378.96899 303.35501 337 c
273.207 260.61301 248.23801 166.355 237.30499 122.539 c
S
303.3555 311.30081 m
($%'*)[ 7.000120 3.500060 7.000120 0.000000 ] xS
426.09799 518.88702 m
479.91 505.172 621.72998 466.02701 649.35498 428 c
684.43799 379.703 675.71503 192.039 671.211 123.359 c
S
675.35553 311.30081 m
($%"\))[ 7.000120 3.500060 7.000120 0.000000 ] xS
426.078 518.90601 m
498.69901 500.961 737.836 441.06601 748.35498 428 c
821.758 336.80099 790.23798 181.39799 774.40601 122.027 c
S
794.35553 311.30081 m
($%#")[ 7.000120 3.500060 7.000120 0.000000 ] xS
497.44901 331.17599 m
512.91803 348.96899 536.82397 380.10199 546.35498 412 c
548.39099 418.81201 546.88702 420.91 546.35498 428 c
545.66803 437.129 518.43799 623.52698 513.35498 638 c
502.961 667.586 483.72299 698.664 471.23801 717.17999 c
S
536.35553 521.30078 m
($%"&)[ 7.000120 3.500060 7.000120 0.000000 ] xS
466.67999 328.754 m
446.5 345.35901 413.578 376.48801 400.35501 412 c
388.94501 442.64499 394.664 481.30099 399.94501 504.258 c
S
400.3555 416.30081 m
($%"\()[ 7.000120 3.500060 7.000120 0.000000 ] xS
471.26999 297.05099 m
442.48401 256.672 370.11301 155.168 341.383 114.871 c
S
411.3555 206.3008 m
($%#$)[ 7.000120 3.500060 7.000120 0.000000 ] xS
465.672 303.082 m
436.879 285.293 378.07401 248.93401 328.35501 218 c
266.27701 179.375 193.05099 133.53101 157.645 111.348 c
S
328.3555 206.3008 m
($%#&)[ 7.000120 3.500060 7.000120 0.000000 ] xS
483.35501 293.289 m
483.35501 253.48 483.35501 166.414 483.35501 123.27 c
S
483.3555 206.3008 m
($%#')[ 7.000120 3.500060 7.000120 0.000000 ] xS
491.164 294.832 m
507.31601 255.18401 544.34802 164.289 561.85498 121.32 c
S
527.35553 206.3008 m
($%"#)[ 7.000120 3.500060 7.000120 0.000000 ] xS
464.07401 305.32001 m
427.69101 288.85199 346.52701 251.703 279.35501 218 c
199.203 177.785 175.742 173.078 101.355 123 c
96.405998 119.668 91.311996 115.672 86.762001 111.863 c
S
279.3555 206.3008 m
($%#')[ 7.000120 3.500060 7.000120 0.000000 ] xS
467.59 300.48801 m
423.414 262.621 298.504 155.55499 250.48801 114.398 c
S
365.3555 206.3008 m
($%#&)[ 7.000120 3.500060 7.000120 0.000000 ] xS
497.03101 298.117 m
530.508 259.242 616.461 159.42599 652.77002 117.262 c
S
576.35553 206.3008 m
($%#+)[ 7.000120 3.500060 7.000120 0.000000 ] xS
499.85199 301.453 m
548.86298 264.17599 693.51202 154.16 747.09399 113.41 c
S
625.35553 206.3008 m
($%##)[ 7.000120 3.500060 7.000120 0.000000 ] xS
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%EOF
